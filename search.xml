<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>google_hacking</title>
      <link href="/2023/06/13/google-hacking/"/>
      <url>/2023/06/13/google-hacking/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>在我们日常生活中，Google已经成为了获取信息的重要工具。然而，这个强大的搜索引擎同时也可能被用来进行一些我们未曾察觉的活动，这其中就包括Google hacking，对于经常使用google的我，利用其该语法功能，更加精准便捷地搜索到很多东西，为此，做以下总结记录</p><h2 id="Google-hacking是什么？"><a href="#Google-hacking是什么？" class="headerlink" title="Google hacking是什么？"></a>Google hacking是什么？</h2><p>Google hacking，维基百科解释： 是指利用谷歌搜索引擎中的高级操作符，在搜索结果中定位特定的文本字符串 。这种技术利用的是网站配置和代码中存在的安全漏洞，通过特定的搜索语法来寻找和利用这些漏洞。</p><h2 id="Google-hacking常用的技术语法"><a href="#Google-hacking常用的技术语法" class="headerlink" title="Google hacking常用的技术语法"></a>Google hacking常用的技术语法</h2><p>列举常用的google语法，通过这些语法更好定位想要的信息；更多详细的语法，可以进数据库查看</p><ul><li><strong>site:</strong>：这个操作符可以让你只在特定网站内进行搜索。例如，”site:example.com” 就会在 example.com 网站内搜索。</li><li><strong>filetype:</strong>：这个操作符可以帮助你搜索特定类型的文件。例如，”filetype:pdf” 就会搜索PDF文件。</li><li><strong>intitle:</strong>：使用这个操作符可以搜索包含特定词语的网页标题。例如，”intitle:password” 会搜索标题中含有 “password” 的网页。</li><li><strong>inurl:</strong>：这个操作符可以搜索URL中包含特定词语的网页。例如，”inurl:admin” 会搜索URL中包含 “admin” 的网页。</li><li><strong>intext:</strong>：使用这个操作符可以搜索网页正文中包含特定词语的网页。例如，”intext:confidential” 会搜索正文中含有 “confidential” 的网页。</li><li><strong>cache:</strong>：这个操作符可以帮助你查看Google对某个网页的缓存版本。例如，”cache:example.com” 会显示Google最近一次索引 example.com 的快照。</li><li><strong>link:</strong>：这个操作符可以帮助你查找链接到特定URL的所有网页，不过这个功能在2017年被Google关闭，现在可能已经不能用了。</li><li><strong>info:</strong>：这个操作符可以帮助你获取关于特定URL的基本信息，如网页描述、相关链接等。</li><li><strong>related:</strong>：这个操作符可以帮你查找和特定网站内容相关的网站。</li><li><strong>stocks:</strong>：这个操作符可以帮助你查找特定公司的股票信息。</li></ul><blockquote><p>google hacking语法库：<a href="https://www.exploit-db.com/google-hacking-database" target="_blank" rel="noopener">https://www.exploit-db.com/google-hacking-database</a></p></blockquote><p>符号类</p><ul><li><strong>使用双引号(“ “)进行精确匹配</strong>：例如，搜索 “太阳能电池” 将只返回包含完整词组 “太阳能电池” 的结果。</li><li><strong>使用减号(-)排除特定词汇</strong>：例如，搜索 “iPhone -12” 将返回与 iPhone 相关的结果，但不包括 “iPhone 12”。</li><li><strong>使用星号(*)作为通配符</strong>：例如，搜索 “Apple 的 * 手机” 可以返回 “Apple 的 iPhone 手机”、”Apple 的 5G 手机” 等结果。</li><li><strong>使用 OR 查询多个词</strong>：例如，搜索 “华为 OR 小米” 将返回与 “华为” 或 “小米” 相关的结果</li></ul><h2 id="如何利用-防范Google-hacking？"><a href="#如何利用-防范Google-hacking？" class="headerlink" title="如何利用/防范Google hacking？"></a>如何利用/防范Google hacking？</h2><p>利用: 利用好google hacking 可以更准确找到自己需要的信息，做到真正的高效搜索</p><p>防范：Google hacking的首要步骤是对自己的网络环境有深入的了解，包括服务器配置、代码安全等。其次，定期进行安全审计和漏洞扫描也非常重要，这可以帮助我们及时发现并修复潜在的安全问题。最后，我们还可以通过robots.txt文件来限制搜索引擎对敏感信息的索引，从而避免信息被黑客搜索到。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>google hacking 是一种对个人搜索有利的语法知识，加以利用是我们在日常使用中的好利刃；虽然Google hacking可能会带来安全威胁，但只要我们有充足的了解和正确的防范措施，就完全可以保护我们的信息安全。通过持续学习和保持警惕，我们能够在享受互联网带来的便利的同时，也保护好自己的网络安全。</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 技术科普 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日60s读懂世界</title>
      <link href="/2023/06/11/mei-ri-60s/"/>
      <url>/2023/06/11/mei-ri-60s/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><img src="https://api.03c3.cn/zb/" alt="每日60s读懂世界">]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>chatgpt接入微信</title>
      <link href="/2023/06/11/chatgpt-jie-ru-wei-xin/"/>
      <url>/2023/06/11/chatgpt-jie-ru-wei-xin/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="做好前期准备"><a href="#做好前期准备" class="headerlink" title="做好前期准备"></a>做好前期准备</h1><ul><li>一台云服务器</li><li>一个chatgpt账号，带有apikey，用于使用api接口</li><li>github账号 ，用于获取项目</li><li>还有就是一颗愿意折腾，好奇的心，打造属于自己私人小助手和小群体的群聊助手伙伴</li></ul><h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><img src="/.io//source/_posts/chatgpt接入微信/1686405923579.png" alt="效果图" style="zoom:20%;"><h2 id="服务器选择"><a href="#服务器选择" class="headerlink" title="服务器选择"></a>服务器选择</h2><p>由于api接口后期也被墙了，使用境外服务器的话就不需要配置代理，相对方便；</p><p>我个人是弄了一台腾讯云，轻量级， CentOS7.6的操作系统 ；新人首次112一年，够用；</p><h2 id="chatgpt账号注册"><a href="#chatgpt账号注册" class="headerlink" title="chatgpt账号注册"></a>chatgpt账号注册</h2><p>注册的话，用邮箱，用sms接码验证便可注册，这里不具体阐述，会自带5$的api额度</p><h2 id="github账号"><a href="#github账号" class="headerlink" title="github账号"></a>github账号</h2><p>直接账号注册，做好相关配置，获取机器人项目</p><p>项目地址：<a href="https://github.com/zhayujie/chatgpt-on-wechat" target="_blank" rel="noopener">https://github.com/zhayujie/chatgpt-on-wechat</a></p><p>项目克隆步骤:</p><p>1配置ssh key</p><p>到服务器输入命令： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;xxxx@test.com&quot;  #然后一直回车即可</span><br></pre></td></tr></table></figure><p> 2 输入以下命令，查看，复制生成的key ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>3将复制的内容放置于github上ssh keys上，保存即可</p><h1 id="部署操作步骤"><a href="#部署操作步骤" class="headerlink" title="部署操作步骤"></a>部署操作步骤</h1><h2 id="安装相关工具和环境部署"><a href="#安装相关工具和环境部署" class="headerlink" title="安装相关工具和环境部署"></a>安装相关工具和环境部署</h2><p>环境要求为python3.9+版本</p><p> 查看一下服务器是否有下载python和git：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@miyi_server ~]# python3 -V</span><br><span class="line">Python 3.9.2</span><br><span class="line">[root@miyi_server ~]# git --version</span><br><span class="line">git version 1.8.3.1</span><br></pre></td></tr></table></figure><p>我已经安装，假设你的服务器还没安装的话，则做如下操作，代码和注释已经很清晰，照着来就可以</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">yum update #更新下yum源</span><br><span class="line">yum install -y git #安装git</span><br><span class="line">cd /home #切换到/home目录下</span><br><span class="line">git clone git@github.com:zhayujie/chatgpt-on-wechat.git #去github仓库克隆项目</span><br><span class="line">yum install -y wget #安装wget，用于从Web服务器上下载python3文件</span><br><span class="line">wget https://www.python.org/ftp/python/3.9.2/Python-3.9.2.tgz #下载文件</span><br><span class="line">tar -xzvf Python-3.9.2.tgz #对文件进行解压</span><br><span class="line">yum install -y gcc # 从这里开始安装相关依赖</span><br><span class="line">yum install -y zlib-devel</span><br><span class="line">yum install openssl-devel</span><br><span class="line">yum install libffi-devel</span><br></pre></td></tr></table></figure><h2 id="配置python环境"><a href="#配置python环境" class="headerlink" title="配置python环境"></a>配置python环境</h2><p>对python进行相关操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cd /home/Python-3.9.2 #进入目录</span><br><span class="line">##编译python</span><br><span class="line">./configure</span><br><span class="line">make altinstall</span><br><span class="line">ln -s /usr/local/bin/python3.9 /usr/bin/python3 #加入软链接，指向该目录</span><br><span class="line">yum install -y python3-pip  #安装pip3</span><br><span class="line"></span><br><span class="line">##安装相关依赖包</span><br><span class="line">pip3 install itchat-uos==1.5.0.dev0 #安装微信机器人的包</span><br><span class="line">pip3 install --upgrade openai  #对openai 的包进行更新</span><br><span class="line"></span><br><span class="line">##假如更新过后python的版本发生了改变，则需要重新设置一下</span><br><span class="line">rm /usr/bin/python3 #删除python3软连接 </span><br><span class="line">ln -s /usr/local/bin/python3.9 /usr/bin/python3 #重新加入软连接</span><br><span class="line">pip3 install --upgrade openai #对openai 的包进行更新</span><br></pre></td></tr></table></figure><h2 id="项目配置文件操作"><a href="#项目配置文件操作" class="headerlink" title="项目配置文件操作"></a>项目配置文件操作</h2><p>python相关配置完成之后，对项目目录进行设置，配置相关参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd ../chatgpt-on-wechat/ #进入项目目录</span><br><span class="line">cp config-template.json config.json #负制一份配置文件</span><br><span class="line"></span><br><span class="line">## 使用vim工具进行编辑，假设你服务器没有，只需要</span><br><span class="line">yum install -y vim</span><br><span class="line">vim config.json #打开配置文件</span><br></pre></td></tr></table></figure><p>以下配置文件的内容参数解析，根据我的注释做个人设置即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;open_ai_api_key&quot;: &quot;此处输入你自己的apikey&quot;,</span><br><span class="line">  &quot;model&quot;: &quot;gpt-3.5-turbo&quot;,</span><br><span class="line">  &quot;proxy&quot;: &quot;http://127.0.0.1:7890&quot;, #这便是需要配置代理的情况，假设你是境外服务器，则没有这个</span><br><span class="line">  &quot;single_chat_prefix&quot;: [</span><br><span class="line">    &quot;dan&quot; #此处为私人聊天的触发词选项，我设置为dan，私人聊天便会按照这个触发词来决定是否由bot回答</span><br><span class="line">  ],</span><br><span class="line">  &quot;single_chat_reply_prefix&quot;: &quot;&quot;,</span><br><span class="line">  &quot;group_chat_prefix&quot;: [</span><br><span class="line">    &quot;@dan&quot;  #群聊触发 为@dan</span><br><span class="line">  ],</span><br><span class="line">  &quot;group_name_white_list&quot;: [</span><br><span class="line">    &quot;ALL_GROUP&quot;  #设置所有群都开启bot功能</span><br><span class="line">  ],</span><br><span class="line">  &quot;group_chat_in_one_session&quot;: [</span><br><span class="line">    &quot;ChatGPT测试群&quot; </span><br><span class="line">  ],</span><br><span class="line">  &quot;image_create_prefix&quot;: [</span><br><span class="line">    &quot;画&quot;,</span><br><span class="line">    &quot;看&quot;,</span><br><span class="line">    &quot;找&quot; #此为图片触发词</span><br><span class="line">  ],</span><br><span class="line">  &quot;speech_recognition&quot;: true,  #是否打开语音识别，针对私聊</span><br><span class="line">  &quot;group_speech_recognition&quot;: false,  #是否打开语音识别，针对群聊</span><br><span class="line">  &quot;voice_reply_voice&quot;: false, #是否开启语音回复</span><br><span class="line">  &quot;conversation_max_tokens&quot;: 10000, #回复token的限制长度</span><br><span class="line">  &quot;expires_in_seconds&quot;: 3600, #响应时间</span><br><span class="line">  &quot;character_desc&quot;: &quot;你是ChatGPT, 一个由OpenAI训练的大型语言模型, 你旨在回答并解决人们的任何问题，并且可以使用多种语言与人交流。&quot;,</span><br><span class="line">  &quot;subscribe_msg&quot;: &quot;感谢您的关注！\n这里是ChatGPT，可以自由对话。\n支持语音对话。\n支持图片输入。\n支持图片输出，画字开头的消息将按要求创作图片。\n支持tool、角色扮演和文字冒险等丰富的插件。\n输入&#123;trigger_prefix&#125;#help 查看详细指令。&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置完成 按ESC 输入  :wq 便可以保存退出</p><p>安装运行相关的python3库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pip3 install chatgpt_tool_hub</span><br><span class="line">pip3 install qrcode</span><br><span class="line">pip3 install pyqrcode</span><br><span class="line">python3 app.py #运行app.py，便会出现二维码，扫码登录即可使用机器人</span><br></pre></td></tr></table></figure><h2 id="让bot永不间断地回复"><a href="#让bot永不间断地回复" class="headerlink" title="让bot永不间断地回复"></a>让bot永不间断地回复</h2><p>服务是用终端进行连接的，终端进程会随着终端的关闭同时关闭，这时候即使服务器24小时开着，bot也会随着终端的关闭而停止，这时候需要想个法子让它在后台一直运行</p><p>面对这个问题，采用linux下的 nohup工具便可解决</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">touch nohup.out #先创建一个nohup.out</span><br><span class="line">nohup python3 app.py &amp; tail -f nohup.out #让应用程序以后台方式运行，并将输出日志重定向到nohup.out文件中，同时使用tail -f命令来实时监控nohup.out文件的内容变化;</span><br><span class="line"></span><br><span class="line"># 当需要关闭后台时候</span><br><span class="line">ps -ef | grep app.py #查看进程</span><br><span class="line">kill -9 进程号</span><br></pre></td></tr></table></figure><p>到此，整个操作就完成了，可以实现微信机器人的功能了</p><h1 id="服务器代理设置"><a href="#服务器代理设置" class="headerlink" title="服务器代理设置"></a>服务器代理设置</h1><p>上面提到，用国内服务器的，需要配置相关的代理服务，在这篇里不做阐述； 大体的实现是在服务器上配置代理，方式有很多种，个人使用的是clash for linux，同样需要配置后台运行，这时候使用的则是配置systemd服务了，相对方便；配置代理文件等</p><p>综上，直接使用不需要配置代理的服务器会方便很多，只需按我上面提到的操作即可。</p>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>共享无价：资源分享合集</title>
      <link href="/2023/06/09/gong-xiang-wu-jie-zi-yuan-fen-xiang-he-ji/"/>
      <url>/2023/06/09/gong-xiang-wu-jie-zi-yuan-fen-xiang-he-ji/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="共享无价：资源分享合集"><a href="#共享无价：资源分享合集" class="headerlink" title="共享无价：资源分享合集"></a>共享无价：资源分享合集</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>遇到某些问题，需要啥资源了，就来看此帖，主张一个   “你刚好需要，而我，刚好出现O(∩_∩)O”</p><p>当我们需要某些资源时，通常会选择购买或寻找其他来源来满足我们的需求。购买资源可能是一种常见的方式，但有时我们可能会遇到价格过高或难以获得的困境。这时，我们开始寻找替代方案，以满足我们的需求。互联网的急速发展，信息爆炸，寻找资源，找到好用免费的资源，有时候不是那么容易。为此我打算在平台和社区分享我的知识、技能、工具、内容和创意。</p><p>为什么做资源分享？</p><p>我个人认为：分享者获得满足感和建立社交网络，受益者获得免费和有价值的资源。</p><p>资源合集：<a href="https://flowus.cn/bevis23/share/416a6010-b2d6-4201-8937-b7a83099a65d" target="_blank" rel="noopener">Bevis_share</a></p><p>我会将各种资源放在flowus社区，就是以上链接；此博客由hexo搭建，托管与github，对于零碎的资源分享链接放置于社区更加方便，博客则用于分享其中一些资源的使用方法与心得</p><h2 id="免费资源的种类"><a href="#免费资源的种类" class="headerlink" title="免费资源的种类"></a>免费资源的种类</h2><ul><li>网站资源 </li><li>实用工具</li><li>软件与app</li><li>ai合集</li><li>github精华推荐</li><li>阅读分享</li><li>浏览器增强-插件</li></ul><h2 id="资源分享的好处"><a href="#资源分享的好处" class="headerlink" title="资源分享的好处"></a>资源分享的好处</h2><p>成功的资源分享者往往能够获得丰富的回报。他们与其他专业人士建立了有价值的合作关系，扩大了自己的网络和人脉。同时，他们也获得了更多的学习机会和个人成长的空间。通过分享资源，您将在知识交流、专业发展和个人成就方面获得无限的机遇和成就感。</p><p>所以，不要犹豫，成为资源分享者，积极贡献您的知识和资源。共享文化的重要性不可低估，而您的参与将为您和他人带来巨大的收益和影响力。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>赠人玫瑰，手留余香；我受益于互联网，同时也成为互联网的分享者，和万千分享者一样，不忘初心。</p><p>最后，还是这句：永远保持好奇心，去探索，去直面自己的感受，面对万物渐变，宓而待之，追翊于廖廓，终有所感，终有所得……</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=857896&auto=1&height=66"></iframe>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 资源分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dream and life</title>
      <link href="/2023/05/27/dream/"/>
      <url>/2023/05/27/dream/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>不是每个人都应该像我这样去建造一座水晶大教堂，但是每个人都应该拥有自己的梦想，设计自己的梦想，追求自己的梦想，实现自己的梦想。梦想是生命的灵魂，是心灵的灯塔，是引导人走向成功的信仰。有了崇高的梦想，只要矢志不渝地追求，梦想就会成为现实，奋斗就会变成壮举，生命就会创造奇迹。——罗伯·舒乐 </p><div align="middle">    <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=2048584480&auto=1&height=66"></iframe></div>]]></content>
      
      
      <categories>
          
          <category> 阅读分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客的新开始</title>
      <link href="/2023/05/25/bo-ke-de-xin-kai-shi/"/>
      <url>/2023/05/25/bo-ke-de-xin-kai-shi/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="欢迎来到我的博客"><a href="#欢迎来到我的博客" class="headerlink" title="欢迎来到我的博客"></a>欢迎来到我的博客</h1><p>欢迎大家来到我的博客！我很高兴你们能在这个虚拟空间中找到我。</p><h2 id="博客的目标"><a href="#博客的目标" class="headerlink" title="博客的目标"></a>博客的目标</h2><p>这个博客的主要目标是分享和记录。我将在这里分享我学到的一些资源与知识、经验和想法，同时也将这个空间作为记录我个人成长和探索的地方。</p><p>我相信，学习是一个永无止境的过程，而分享和记录则是这个过程的重要组成部分。分享可以帮助我们更深入地理解我们所学的东西，同时也可以帮助其他人。记录则可以帮助我们反思，看看我们从哪里来，以及我们正在走向何方。</p><h2 id="预期的内容"><a href="#预期的内容" class="headerlink" title="预期的内容"></a>预期的内容</h2><p>在接下来的日子里，我将在这个博客中发布各种各样的文章。可能是关于技术的，比如编程、人工智能或者是资源分享。可能是关于艺术的，比如阅读、绘画或音乐。也可能是关于生活的思考，比如健康、旅行或者是个人成长。</p><p>我也希望能够听到你们的声音。如果你有任何的问题、建议或者是想要分享的话题，欢迎在评论区留言。我会很高兴能和你们进行交流。</p><h2 id="最后的话"><a href="#最后的话" class="headerlink" title="最后的话"></a>最后的话</h2><p>在这个瞬息万变的世界里，有一件事是永恒的，那就是变化。我期待在这个变化中找到我自己，也期待和你们一起探索这个美好的世界。<br>最后的最后，永远保持好奇心，去探索，去直面自己的感受，面对万物渐变，宓而待之，追翊于廖廓，终有所感，终有所得……</p><p>感谢你的阅读，我们下次见！</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
